---
title: Random thoughts on using Git
slug: git-vs-svn
date: 2011-03-29
layout: post
published: true
filename: 2011-03-29-git-vs-svn.markdown
---
<!-- *********************************************************************
**                                                                      **
** To add a comment, scroll to the bottom and use the comment template. **
** Then save the file and send me a pull request.                       **
**                                                                      **
***********************************************************************-->

A couple of weeks ago, I switched from Subversion to Git for a couple of smaller projects. Below are some of my findings.

### Switching from Subversion

Git is a little harder to understand than Subversion, because of it’s lack of a centralized repository, and because it has more concepts you need to understand. But if you already understand SVN well, it’s very manageable. I’ve no idea how the learning curve compares to SVN for a complete newbie to version control.

If you are on the fence, there are two things that I wish I knew about sooner:

  * [Git Immersion](http://gitimmersion.com/) only takes an hour or so, but you’ll understand so much more of git than when using conventional books or tutorials.
  * [Migrating an SVN repo to git](http://help.github.com/svn-importing/) is dead easy.

### Open source community

GitHub alone is plenty of reason to switch to Git. It seems like the whole PHP community (and the whole open source community) are moving to GitHub. And you can’t blame them. GitHub works really, really well. It makes it easy to maintain your own fork of a project, make changes and send them as pull requests. Symfony2 for example noticed a huge increase in contributions since the move.

Even if you only consume open source code and don’t plan on contributing patches, you’ll find you need to understand at least how cloning and pulling work, so you can easily download code.

### Svn:externals

I usually include third party libraries in my projects using svn:externals. At the moment, a lot of PHP libraries that switched to git, still sync to SVN. But I’m sure that people will stop bothering with that. That’s a problem if your SVN repository depends externals. You could set up your own syncing, or take the hint and move to git.

### Fixing ‘oops’ moments

With SVN, commits are pretty much written in stone. Because of that, a convention has emerged:

  * Faulty commits are followed by a commit labeled ‘reverted rev 123’
  * Incomplete commits are followed by a commit with the same message

Git has a lot more possibilities to fix errors, amend to commits, etc. That’s a blessing and a curse. I find that by trying to make my history look pretty, I seem to make a mess of things. It’s not a big deal, because in Git, nothing is ever lost. Perhaps it’s just my lack of experience with git. In any case, I think that for now, I will stick to the SVN convention and won’t try to hide my clumsiness from the world.

## Comments

<!-- To add a comment, copy this template: (don't worry about markup, I'll clean it up if need be)

### [YOUR NAME](YOUR URL|TWITTER|...) - YYYY/MM/DD
YOUR COMMENT TEXT HERE....

-->
